image: node:latest

variables:
  DIST_PATH: "build/"
  STAGING_S3_BUCKET: s3://lodgly.dev-eu-west-1/
  STAGING_DISTRIBUTION_ID: E39IRLN1DWL849
  PRODUCTION_S3_BUCKET: s3://lodgly.com-eu-west-1/
  PRODUCTION_DISTRIBUTION_ID: E3ED1A1BZOP2XM

stages:
  - build
  - deploy

cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - node_modules/
    - .cache/
    - $DIST_PATH

build:
  stage: build
  script:
    - npm prune
    - npm install --production
    - |
      [ "$CI_COMMIT_REF_NAME" == "master" ] && REACT_APP_ENV="production" || REACT_APP_ENV="staging"
      npm run build
  artifacts:
    when: on_success
    paths:
      - $DIST_PATH
    expire_in: 20 mins
  only:
    - staging
    - master

staging:
  image: python:latest
  stage: deploy
  dependencies:
    - build
  before_script:
    - pip install awscli
  script:
    - aws s3 sync $DIST_PATH $STAGING_S3_BUCKET --delete
    - INVALIDATION_ID=$(aws cloudfront create-invalidation --distribution-id ${STAGING_DISTRIBUTION_ID} --paths /* --query 'Invalidation.Id' --output text) && aws cloudfront wait invalidation-completed --id ${INVALIDATION_ID} --distribution-id ${STAGING_DISTRIBUTION_ID}
  environment:
    name: staging
    url: https://eliteapartments.lodgly.dev
  only:
    - staging

production:
  image: python:latest
  stage: deploy
  dependencies:
    - build
  before_script:
    - pip install awscli
  script:
    - aws s3 sync $DIST_PATH $PRODUCTION_S3_BUCKET --delete
    - INVALIDATION_ID=$(aws cloudfront create-invalidation --distribution-id ${PRODUCTION_DISTRIBUTION_ID} --paths /* --query 'Invalidation.Id' --output text) && aws cloudfront wait invalidation-completed --id ${INVALIDATION_ID} --distribution-id ${PRODUCTION_DISTRIBUTION_ID}
  environment:
    name: production
    url: https://eliteapartments.lodgly.com
  only:
    - master
